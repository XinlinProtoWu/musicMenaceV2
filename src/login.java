/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 吴欣霖
 */
/**
 * Color pallette
 * Black: [23, 23, 23]
 * Brown: [89,61,62]
 * Red: [193,49,42]
 * Gold: [208, 158, 57]
 * Maroon: [152,72,64]
 * White:[229,220,225]
 */
import org.json.simple.*;
import java.io.*;
import java.io.File;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.util.*;
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        errorTxt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userIn = new javax.swing.JTextField();
        passIn = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 51, 0));

        jPanel2.setBackground(new java.awt.Color(23, 23, 23));

        jPanel1.setBackground(new java.awt.Color(208, 158, 57));

        jPanel3.setBackground(new java.awt.Color(23, 23, 23));

        jLabel2.setFont(new java.awt.Font("Rockwell Condensed", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(208, 158, 57));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Music Menace V2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(154, 154, 154))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        errorTxt.setBackground(new java.awt.Color(148, 57, 52));
        errorTxt.setFont(new java.awt.Font("Rockwell Condensed", 0, 12)); // NOI18N
        errorTxt.setForeground(new java.awt.Color(204, 175, 131));

        jLabel4.setBackground(new java.awt.Color(148, 57, 52));
        jLabel4.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(152, 72, 64));
        jLabel4.setText("Username: ");

        userIn.setBackground(new java.awt.Color(229, 220, 225));
        userIn.setFont(new java.awt.Font("Arial Unicode MS", 0, 12));
        userIn.setForeground(new java.awt.Color(148, 57, 52));

        passIn.setBackground(new java.awt.Color(229, 220, 225));
        passIn.setFont(new java.awt.Font("Arial Unicode MS", 0, 12));
        passIn.setForeground(new java.awt.Color(148, 57, 52));

        loginBtn.setBackground(new java.awt.Color(23, 23, 23));
        loginBtn.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(208, 158, 57));
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        registerBtn.setBackground(new java.awt.Color(23, 23, 23));
        registerBtn.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(208, 158, 57));
        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(148, 57, 52));
        jLabel5.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(152, 72, 64));
        jLabel5.setText("Password:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel5)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userIn, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passIn, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jLabel4)
                    .addContainerGap(452, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(userIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorTxt)
                .addGap(17, 17, 17)
                .addComponent(registerBtn)
                .addGap(27, 27, 27)
                .addComponent(loginBtn)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(223, 223, 223)
                    .addComponent(jLabel4)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Declare global variables
    private static ArrayList<User> userList = new ArrayList<User>();
    private static JSONArray userObjList = new JSONArray();
    private static String currentUser;
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
        //Read the users file to see if there are any users already registered in the system.
        File file = new File("data/users.json");
        if (file.length()!=0){
            //If there are registered users, read the file
            readFile();
        }
        //get uesr credentials
        String username = userIn.getText();
        String password = passIn.getText();
        //check if username already exists
        for (User user:userList){
            if(user.getUsername().equals(username)){
                errorTxt.setText("Username already exists!");
                return;
            }
        }
        //check if password length is ok
        if(password.length()<6){
            errorTxt.setText("Password length does not meet the minimum length of 6!");
            return;
        }
        //write into users json file
        JSONObject user = new JSONObject();
        JSONObject userObj = new JSONObject();
        user.put("Username", username);
        user.put("Password", password);
        userObj.put("User", user);
        userObjList.add(userObj);
        try(FileWriter writer = new FileWriter("data/users.json")){
            writer.write(userObjList.toJSONString());
            writer.flush();
        }
        catch(IOException e){
            e.printStackTrace();
        }
        //create user directories
        String directory = "data/"+username;
        File newFolder = new File(directory);
        newFolder.mkdir();
        String musicFolder = directory+"/music";
        File newMusicFolder = new File(musicFolder);
        newMusicFolder.mkdir();
        //change frames
        this.dispose();
        currentUser=username;
        musicMenaceV2 mainFrame = new musicMenaceV2();
        mainFrame.setVisible(true);
    }//GEN-LAST:event_registerBtnActionPerformed
    //read from file
    public static void readFile(){
        userObjList.clear();
        JSONParser parser = new JSONParser();
        try (FileReader reader = new FileReader("data/users.json")){
            Object obj = parser.parse(reader);
            JSONArray userObjList = (JSONArray) obj;
            //for each user in the file, parse and create user objects
            userObjList.forEach(user -> parseUser((JSONObject)user));
            reader.close();
        }
        catch(FileNotFoundException e){
            e.printStackTrace();
        }
        catch(IOException e){
            e.printStackTrace();
        }
        catch(ParseException e){
            e.printStackTrace();
        }
    }
    //Parsing users
    private static void parseUser (JSONObject users){
        JSONObject user = (JSONObject) users.get("User");
        JSONObject userObj = new JSONObject();
        userObj.put("User", user);
        userObjList.add(userObj);
        //create user object using the read information
        User newUser = new User(user.get("Username").toString(), user.get("Password").toString());
        userList.add(newUser);
    }
    //login
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        File file = new File("data/users.json");
        //See if there are any registered users first
        if (file.length()!=0){
            readFile();
        }
        //if not, the user cannot login
        else{
            loginError();
            return;
        }
        //grab user input
        String username = userIn.getText();
        String password = passIn.getText();
        //check if user credentials are correct
        for (User user:userList){
            if(user.getUsername().equals(username)&&user.getPassword().equals(password)){
                //set the current user and change frames
                currentUser = username;
                this.dispose();
                musicMenaceV2 mainFrame = new musicMenaceV2();
                mainFrame.setVisible(true);
                break;
            }
        }
        //if incorrect, user cannot login and will display error
        loginError();
    }//GEN-LAST:event_loginBtnActionPerformed
    //display error message
    private void loginError(){
        errorTxt.setText("Username or password incorrect");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }
    //For getting the logged-in user
    public static String getCurrentUser(){
        return currentUser;
    }
    //For resetting the user when logged out
    public static String resetCurrentUser(){
        currentUser = null;
        return currentUser;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextField passIn;
    private javax.swing.JButton registerBtn;
    private javax.swing.JTextField userIn;
    // End of variables declaration//GEN-END:variables
}
